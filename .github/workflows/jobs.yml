---
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - '*'
  schedule:
    - cron: '15 12 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  # yamllint disable-line rule:line-length
  GOOGLE_CHROME_URL: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
  CLIENT_DEB_CACHE_DIR: /tmp/.deb-client

jobs:
  lint_markdown:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Lint changelog file
        uses: avto-dev/markdown-lint@v1.5.0
        with:
          rules: '/lint/rules/changelog.js'
          config: '/lint/config/changelog.yml'
          args: './CHANGELOG.md'

      - name: Lint other markdown files
        uses: avto-dev/markdown-lint@v1.5.0
        with:
          config: './.github/workflows/config/markdown_lint_config.yml'
          args: './*.md'
          ignore: './CHANGELOG.md'

  lint_yaml:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Yamllint Github Action
        uses: karancode/yamllint-github-action@v2.0.0
        with:
          yamllint_strict: true
          yamllint_comment: true

  verify_browser_dns_cache_hit:
    runs-on: ubuntu-latest
    if: true
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Prepare cache directory
        run: mkdir ${CLIENT_DEB_CACHE_DIR}
      - name: docker-compose up
        run: scripts/docker-compose-up.sh
      - name: Bootstrap client
        run: sh ./scripts/client-bootstrap.sh
      - name: Get Google Chrome deb hash(last modified date)
        id: google-chrome-deb-hash
        # yamllint disable-line rule:line-length
        run: echo "::set-output name=hash::$(curl --silent --head ${GOOGLE_CHROME_URL} | grep -i "last-modified:" | md5sum | cut -b 1-6)-$(curl --silent 'https://chromedriver.chromium.org/downloads' | grep -o 'href="https://[^\"]*"' | grep path | grep -o '[0-9][0-9\.]*' | head -1 | md5sum | cut -b 1-6)"
      - name: Restore Cache
        id: restore-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CLIENT_DEB_CACHE_DIR }}
          key: cache-deb-${{ steps.google-chrome-deb-hash.outputs.hash }}
      - name: Setting dependency cache
        # yamllint disable-line rule:line-length
        run: docker exec -i docker-client-1 bash /root/scripts/setup_client.sh "${CLIENT_DEB_CACHE_DIR}" "${GOOGLE_CHROME_URL}"
      - name: Init client
        run: docker exec -i docker-client-1 bash /root/scripts/init_client.sh
      - name: verify_browser_dns_cache_hit
        run: jobs/verify_browser_dns_cache_hit.sh
      - name: docker-compose down
        run: scripts/docker-compose-down.sh

  verify_browser_dns_cache_miss_expire:
    runs-on: ubuntu-latest
    if: true
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Prepare cache directory
        run: mkdir ${CLIENT_DEB_CACHE_DIR}
      - name: docker-compose up
        run: scripts/docker-compose-up.sh
      - name: Bootstrap client
        run: sh ./scripts/client-bootstrap.sh
      - name: Get Google Chrome deb hash(last modified date)
        id: google-chrome-deb-hash
        # yamllint disable-line rule:line-length
        run: echo "::set-output name=hash::$(curl --silent --head ${GOOGLE_CHROME_URL} | grep -i "last-modified:" | md5sum | cut -b 1-6)-$(curl --silent 'https://chromedriver.chromium.org/downloads' | grep -o 'href="https://[^\"]*"' | grep path | grep -o '[0-9][0-9\.]*' | head -1 | md5sum | cut -b 1-6)"
      - name: Restore Cache
        id: restore-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CLIENT_DEB_CACHE_DIR }}
          key: cache-deb-${{ steps.google-chrome-deb-hash.outputs.hash }}
      - name: Setting dependency cache
        # yamllint disable-line rule:line-length
        run: docker exec -i docker-client-1 bash /root/scripts/setup_client.sh "${CLIENT_DEB_CACHE_DIR}" "${GOOGLE_CHROME_URL}"
      - name: Init client
        run: docker exec -i docker-client-1 bash /root/scripts/init_client.sh
      - name: verify_browser_dns_cache_miss_expire
        run: jobs/verify_browser_dns_cache_miss_expire.sh
      - name: docker-compose down
        run: scripts/docker-compose-down.sh

  verify_browser_dns_cache_miss_process:
    runs-on: ubuntu-latest
    if: true
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Prepare cache directory
        run: mkdir ${CLIENT_DEB_CACHE_DIR}
      - name: docker-compose up
        run: scripts/docker-compose-up.sh
      - name: Bootstrap client
        run: sh ./scripts/client-bootstrap.sh
      - name: Get Google Chrome deb hash(last modified date)
        id: google-chrome-deb-hash
        # yamllint disable-line rule:line-length
        run: echo "::set-output name=hash::$(curl --silent --head ${GOOGLE_CHROME_URL} | grep -i "last-modified:" | md5sum | cut -b 1-6)-$(curl --silent 'https://chromedriver.chromium.org/downloads' | grep -o 'href="https://[^\"]*"' | grep path | grep -o '[0-9][0-9\.]*' | head -1 | md5sum | cut -b 1-6)"
      - name: Restore Cache
        id: restore-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CLIENT_DEB_CACHE_DIR }}
          key: cache-deb-${{ steps.google-chrome-deb-hash.outputs.hash }}
      - name: Setting dependency cache
        # yamllint disable-line rule:line-length
        run: docker exec -i docker-client-1 bash /root/scripts/setup_client.sh "${CLIENT_DEB_CACHE_DIR}" "${GOOGLE_CHROME_URL}"
      - name: Init client
        run: docker exec -i docker-client-1 bash /root/scripts/init_client.sh
      - name: verify_browser_dns_cache_miss_process
        run: jobs/verify_browser_dns_cache_miss_process.sh
      - name: docker-compose down
        run: scripts/docker-compose-down.sh

  verify_browser_host_resolver_rules:
    runs-on: ubuntu-latest
    if: true
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Prepare cache directory
        run: mkdir ${CLIENT_DEB_CACHE_DIR}
      - name: docker-compose up
        run: scripts/docker-compose-up.sh
      - name: Bootstrap client
        run: sh ./scripts/client-bootstrap.sh
      - name: Get Google Chrome deb hash(last modified date)
        id: google-chrome-deb-hash
        # yamllint disable-line rule:line-length
        run: echo "::set-output name=hash::$(curl --silent --head ${GOOGLE_CHROME_URL} | grep -i "last-modified:" | md5sum | cut -b 1-6)-$(curl --silent 'https://chromedriver.chromium.org/downloads' | grep -o 'href="https://[^\"]*"' | grep path | grep -o '[0-9][0-9\.]*' | head -1 | md5sum | cut -b 1-6)"
      - name: Restore Cache
        id: restore-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CLIENT_DEB_CACHE_DIR }}
          key: cache-deb-${{ steps.google-chrome-deb-hash.outputs.hash }}
      - name: Setting dependency cache
        # yamllint disable-line rule:line-length
        run: docker exec -i docker-client-1 bash /root/scripts/setup_client.sh "${CLIENT_DEB_CACHE_DIR}" "${GOOGLE_CHROME_URL}"
      - name: Init client
        run: docker exec -i docker-client-1 bash /root/scripts/init_client.sh
      - name: verify_browser_host_resolver_rules
        run: jobs/verify_browser_host_resolver_rules.sh
      - name: docker-compose down
        run: scripts/docker-compose-down.sh

  verify_nscd_cache_hit:
    runs-on: ubuntu-latest
    if: true
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Prepare cache directory
        run: mkdir ${CLIENT_DEB_CACHE_DIR}
      - name: docker-compose up
        run: scripts/docker-compose-up.sh
      - name: Bootstrap client
        run: sh ./scripts/client-bootstrap.sh
      - name: Get Google Chrome deb hash(last modified date)
        id: google-chrome-deb-hash
        # yamllint disable-line rule:line-length
        run: echo "::set-output name=hash::$(curl --silent --head ${GOOGLE_CHROME_URL} | grep -i "last-modified:" | md5sum | cut -b 1-6)-$(curl --silent 'https://chromedriver.chromium.org/downloads' | grep -o 'href="https://[^\"]*"' | grep path | grep -o '[0-9][0-9\.]*' | head -1 | md5sum | cut -b 1-6)"
      - name: Restore Cache
        id: restore-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CLIENT_DEB_CACHE_DIR }}
          key: cache-deb-${{ steps.google-chrome-deb-hash.outputs.hash }}
      - name: Setting dependency cache
        # yamllint disable-line rule:line-length
        run: docker exec -i docker-client-1 bash /root/scripts/setup_client.sh "${CLIENT_DEB_CACHE_DIR}" "${GOOGLE_CHROME_URL}"
      - name: Init client
        run: docker exec -i docker-client-1 bash /root/scripts/init_client.sh
      - name: verify_nscd_cache_hit
        run: jobs/verify_nscd_cache_hit.sh
      - name: docker-compose down
        run: scripts/docker-compose-down.sh

  verify_nscd_cache_miss:
    runs-on: ubuntu-latest
    if: true
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Prepare cache directory
        run: mkdir ${CLIENT_DEB_CACHE_DIR}
      - name: docker-compose up
        run: scripts/docker-compose-up.sh
      - name: Bootstrap client
        run: sh ./scripts/client-bootstrap.sh
      - name: Get Google Chrome deb hash(last modified date)
        id: google-chrome-deb-hash
        # yamllint disable-line rule:line-length
        run: echo "::set-output name=hash::$(curl --silent --head ${GOOGLE_CHROME_URL} | grep -i "last-modified:" | md5sum | cut -b 1-6)-$(curl --silent 'https://chromedriver.chromium.org/downloads' | grep -o 'href="https://[^\"]*"' | grep path | grep -o '[0-9][0-9\.]*' | head -1 | md5sum | cut -b 1-6)"
      - name: Restore Cache
        id: restore-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CLIENT_DEB_CACHE_DIR }}
          key: cache-deb-${{ steps.google-chrome-deb-hash.outputs.hash }}
      - name: Setting dependency cache
        # yamllint disable-line rule:line-length
        run: docker exec -i docker-client-1 bash /root/scripts/setup_client.sh "${CLIENT_DEB_CACHE_DIR}" "${GOOGLE_CHROME_URL}"
      - name: Init client
        run: docker exec -i docker-client-1 bash /root/scripts/init_client.sh
      - name: verify_nscd_cache_miss
        run: jobs/verify_nscd_cache_miss.sh
      - name: docker-compose down
        run: scripts/docker-compose-down.sh

  verify_nscd_dns_only:
    runs-on: ubuntu-latest
    if: true
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Prepare cache directory
        run: mkdir ${CLIENT_DEB_CACHE_DIR}
      - name: docker-compose up
        run: scripts/docker-compose-up.sh
      - name: Bootstrap client
        run: sh ./scripts/client-bootstrap.sh
      - name: Get Google Chrome deb hash(last modified date)
        id: google-chrome-deb-hash
        # yamllint disable-line rule:line-length
        run: echo "::set-output name=hash::$(curl --silent --head ${GOOGLE_CHROME_URL} | grep -i "last-modified:" | md5sum | cut -b 1-6)-$(curl --silent 'https://chromedriver.chromium.org/downloads' | grep -o 'href="https://[^\"]*"' | grep path | grep -o '[0-9][0-9\.]*' | head -1 | md5sum | cut -b 1-6)"
      - name: Restore Cache
        id: restore-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CLIENT_DEB_CACHE_DIR }}
          key: cache-deb-${{ steps.google-chrome-deb-hash.outputs.hash }}
      - name: Setting dependency cache
        # yamllint disable-line rule:line-length
        run: docker exec -i docker-client-1 bash /root/scripts/setup_client.sh "${CLIENT_DEB_CACHE_DIR}" "${GOOGLE_CHROME_URL}"
      - name: Init client
        run: docker exec -i docker-client-1 bash /root/scripts/init_client.sh
      - name: verify_nscd_dns_only
        run: jobs/verify_nscd_dns_only.sh
      - name: docker-compose down
        run: scripts/docker-compose-down.sh

  verify_nscd_empty:
    runs-on: ubuntu-latest
    if: true
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Prepare cache directory
        run: mkdir ${CLIENT_DEB_CACHE_DIR}
      - name: docker-compose up
        run: scripts/docker-compose-up.sh
      - name: Bootstrap client
        run: sh ./scripts/client-bootstrap.sh
      - name: Get Google Chrome deb hash(last modified date)
        id: google-chrome-deb-hash
        # yamllint disable-line rule:line-length
        run: echo "::set-output name=hash::$(curl --silent --head ${GOOGLE_CHROME_URL} | grep -i "last-modified:" | md5sum | cut -b 1-6)-$(curl --silent 'https://chromedriver.chromium.org/downloads' | grep -o 'href="https://[^\"]*"' | grep path | grep -o '[0-9][0-9\.]*' | head -1 | md5sum | cut -b 1-6)"
      - name: Restore Cache
        id: restore-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CLIENT_DEB_CACHE_DIR }}
          key: cache-deb-${{ steps.google-chrome-deb-hash.outputs.hash }}
      - name: Setting dependency cache
        # yamllint disable-line rule:line-length
        run: docker exec -i docker-client-1 bash /root/scripts/setup_client.sh "${CLIENT_DEB_CACHE_DIR}" "${GOOGLE_CHROME_URL}"
      - name: Init client
        run: docker exec -i docker-client-1 bash /root/scripts/init_client.sh
      - name: verify_nscd_empty
        run: jobs/verify_nscd_empty.sh
      - name: docker-compose down
        run: scripts/docker-compose-down.sh

  verify_nscd_files_only:
    runs-on: ubuntu-latest
    if: true
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Prepare cache directory
        run: mkdir ${CLIENT_DEB_CACHE_DIR}
      - name: docker-compose up
        run: scripts/docker-compose-up.sh
      - name: Bootstrap client
        run: sh ./scripts/client-bootstrap.sh
      - name: Get Google Chrome deb hash(last modified date)
        id: google-chrome-deb-hash
        run: sh ./scripts/client-deb-cache-key.sh "${GOOGLE_CHROME_URL}"
      - name: Restore Cache
        id: restore-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CLIENT_DEB_CACHE_DIR }}
          key: cache-deb-${{ steps.google-chrome-deb-hash.outputs.hash }}
      - name: Setting dependency cache
        # yamllint disable-line rule:line-length
        run: docker exec -i docker-client-1 bash /root/scripts/setup_client.sh "${CLIENT_DEB_CACHE_DIR}" "${GOOGLE_CHROME_URL}"
      - name: Init client
        run: docker exec -i docker-client-1 bash /root/scripts/init_client.sh
      - name: verify_nscd_files_only
        run: jobs/verify_nscd_files_only.sh
      - name: docker-compose down
        run: scripts/docker-compose-down.sh

  verify_nscd_use_etc_hosts:
    runs-on: ubuntu-latest
    if: true
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Prepare cache directory
        run: mkdir ${CLIENT_DEB_CACHE_DIR}
      - name: docker-compose up
        run: scripts/docker-compose-up.sh
      - name: Bootstrap client
        run: sh ./scripts/client-bootstrap.sh
      - name: Get Google Chrome deb hash(last modified date)
        id: google-chrome-deb-hash
        # yamllint disable-line rule:line-length
        run: echo "::set-output name=hash::$(curl --silent --head ${GOOGLE_CHROME_URL} | grep -i "last-modified:" | md5sum | cut -b 1-6)-$(curl --silent 'https://chromedriver.chromium.org/downloads' | grep -o 'href="https://[^\"]*"' | grep path | grep -o '[0-9][0-9\.]*' | head -1 | md5sum | cut -b 1-6)"
      - name: Restore Cache
        id: restore-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CLIENT_DEB_CACHE_DIR }}
          key: cache-deb-${{ steps.google-chrome-deb-hash.outputs.hash }}
      - name: Setting dependency cache
        # yamllint disable-line rule:line-length
        run: docker exec -i docker-client-1 bash /root/scripts/setup_client.sh "${CLIENT_DEB_CACHE_DIR}" "${GOOGLE_CHROME_URL}"
      - name: Init client
        run: docker exec -i docker-client-1 bash /root/scripts/init_client.sh
      - name: verify_nscd_use_etc_hosts
        run: jobs/verify_nscd_use_etc_hosts.sh
      - name: docker-compose down
        run: scripts/docker-compose-down.sh

  verify_nscd_use_etc_nsswitch:
    runs-on: ubuntu-latest
    if: true
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Prepare cache directory
        run: mkdir ${CLIENT_DEB_CACHE_DIR}
      - name: docker-compose up
        run: scripts/docker-compose-up.sh
      - name: Bootstrap client
        run: sh ./scripts/client-bootstrap.sh
      - name: Get Google Chrome deb hash(last modified date)
        id: google-chrome-deb-hash
        run: sh ./scripts/client-deb-cache-key.sh "${GOOGLE_CHROME_URL}"
      - name: Restore Cache
        id: restore-cache
        uses: actions/cache@v2
        with:
          path: ${{ env.CLIENT_DEB_CACHE_DIR }}
          key: cache-deb-${{ steps.google-chrome-deb-hash.outputs.hash }}
      - name: Setting dependency cache
        # yamllint disable-line rule:line-length
        run: sh ./scripts/client-setup.sh
      - name: Init client
        run: docker exec -i docker-client-1 bash /root/scripts/init_client.sh
      - name: verify_nscd_use_etc_nsswitch
        run: jobs/verify_nscd_use_etc_nsswitch.sh
      - name: docker-compose down
        run: scripts/docker-compose-down.sh
