---
# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run

on:  # yamllint disable-line rule:truthy
  push:
    branches:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  lint_markdown:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Lint changelog file
        uses: avto-dev/markdown-lint@v1.5.0
        with:
          rules: '/lint/rules/changelog.js'
          config: '/lint/config/changelog.yml'
          args: './CHANGELOG.md'

      - name: Lint other markdown files
        uses: avto-dev/markdown-lint@v1.5.0
        with:
          config: './.github/workflows/config/markdown_lint_config.yml'
          args: './*.md'
          ignore: './CHANGELOG.md'

  lint_yaml:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Yamllint Github Action
        uses: karancode/yamllint-github-action@v2.0.0
        with:
          yamllint_strict: true
          yamllint_comment: true

  verify_browser_dns_cache:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Cache docker_client layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-docker_client-cache
          key: >
            cache-${{ hashFiles('**/docker-compose.yml',
              '**/Dockerfile',
              '/tmp/.buildx-docker_client-cache/**') }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true
      - name: Build client
        run: >
          cd docker/client &&
          docker buildx build --load -t docker_client \
            --cache-from type=local,src=/tmp/.buildx-docker_client-cache \
            --cache-to type=local,dest=/tmp/.buildx-docker_client-cache-new .
            > /dev/null
      - name: Move cache after client
        run: |
          rm -rf /tmp/.buildx-docker_client-cache
          mv /tmp/.buildx-docker_client-cache-new /tmp/.buildx-docker_client-cache
      - name: docker-compose up
        run: scripts/docker-compose-up.sh
      - name: verify_browser_dns_cache
        run: jobs/verify_browser_dns_cache.sh
      - name: docker-compose down
        run: scripts/docker-compose-down.sh

  verify_browser_dns_no_cache:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup tools
        run: scripts/setup-tools.sh
      - name: docker-compose up
        run: scripts/docker-compose-up.sh
      - name: verify_browser_dns_no_cache
        run: jobs/verify_browser_dns_no_cache.sh
      - name: docker-compose down
        run: scripts/docker-compose-down.sh

  verify_nscd_cache_hit:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: Setup tools
        run: scripts/setup-tools.sh
      - name: docker-compose up
        run: scripts/docker-compose-up.sh
      - name: verify_nscd_cache_hit
        run: jobs/verify_nscd_cache_hit.sh
      - name: docker-compose down
        run: scripts/docker-compose-down.sh
